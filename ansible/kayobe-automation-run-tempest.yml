---

- hosts: tempest_runner
  gather_facts: false
  vars:
    results_path_local: "{{ lookup('env', 'PWD') }}"
    rally_image: 'stackhpc/docker-rally'
    rally_tag: latest
    rally_image_full: "{{ rally_docker_registry }}/{{ rally_image }}:{{ rally_tag }}"
    rally_no_sensitive_log: true
    # This ensures you get the latest image if the image is updated
    # and the tag isn't e.g when using the latest tag.
    rally_force_pull: true
    rally_docker_registry: ghcr.io
    rally_docker_registry_username:
    rally_docker_registry_password:
    load_list_path_remote: "{{ results_path_remote.path }}/tempest-load-list"
    skip_list_path_remote: "{{ results_path_remote.path }}/tempest-skip-list"
    accounts_path_remote: "{{ results_path_remote.path }}/tempest-accounts"
  tasks:
    - block:

      - name: Create temporary results directory
        ansible.builtin.tempfile:
          state: directory
          suffix: rally-results
        register: results_path_remote

      - name: Ensure docker user has permissions to write to results directory
        file:
          path: "{{ results_path_remote.path }}"
          state: directory
          # We need user in docker container to be able to write to it
          # TODO: Change ownership to user in docker container instead.
          mode: 0777

      - name: Login to docker registry
        docker_login:
          registry_url: "{{ rally_docker_registry or omit }}"
          username: "{{ rally_docker_registry_username }}"
          password: "{{ rally_docker_registry_password }}"
          reauthorize: yes
        when:
          - rally_docker_registry_username is not none
          - rally_docker_registry_password is not none
        become: true

      - name: Ensure rally image exists on runner
        docker_image:
          name: "{{ rally_image_full }}"
          state: present
          force_source: "{{ rally_force_pull | bool }}"
          source: pull
        become: true

      - name: Copy tempest load list to remote host
        copy:
          src: "{{ tempest_load_list_path }}"
          dest: "{{ load_list_path_remote }}"
          owner: "65500"
          group: "1000"
        become: true
        when: tempest_load_list_path is defined

      - name: Copy tempest skip list to remote host
        copy:
          src: "{{ tempest_skip_list_path }}"
          dest: "{{ skip_list_path_remote }}"
          owner: "65500"
          group: "1000"
        become: true
        when: tempest_skip_list_path is defined

      - name: Template tempest accounts
        template:
          src: "{{ tempest_accounts_path }}"
          dest: "{{ accounts_path_remote }}"
          owner: "65500"
          group: "1000"
        become: true
        when: tempest_accounts_path is defined

      - name: Run tempest
        command: |-
           docker run --rm --entrypoint=/usr/bin/rally-verify-wrapper.sh
           -v "{{ results_path_remote.path }}:/home/rally/artifacts"
           --env TEMPEST_OPENRC="$TEMPEST_OPENRC"
           --env TEMPEST_CONCURRENCY="$TEMPEST_CONCURRENCY"
           --env TEMPEST_VERSION="$TEMPEST_VERSION"
           --env TEMPEST_PATTERN="$TEMPEST_PATTERN"
           --env TEMPEST_CONF_OVERRIDES="$TEMPEST_CONF_OVERRIDES"
           --env TEMPEST_NO_PROXY_EXTRA
           --env RALLY_CONF_ENABLE_CREATE_TEMPEST_RESOURCES
           {% if tempest_load_list_path is defined -%}
           -v {{ load_list_path_remote }}:/home/rally/tempest-load-list:rw
           {% endif -%}
           {% if tempest_skip_list_path is defined -%}
           -v {{ skip_list_path_remote }}:/home/rally/tempest-skip-list:rw
           {% endif -%}
           {% if tempest_accounts_path is defined -%}
           -v {{ accounts_path_remote }}:/home/rally/tempest-accounts:ro
           {% endif -%}
           --network host
           {{ rally_image_full }}
        environment:
          TEMPEST_PATTERN: "{{ lookup('env', 'TEMPEST_PATTERN') }}"
          TEMPEST_VERSION: "{{ lookup('env', 'TEMPEST_VERSION') }}"
          TEMPEST_CONCURRENCY: "{{ lookup('env', 'TEMPEST_CONCURRENCY') }}"
          TEMPEST_LOAD_LIST: "{{ lookup('env', 'TEMPEST_LOAD_LIST') }}"
          TEMPEST_SKIP_LIST: "{{ lookup('env', 'TEMPEST_SKIP_LIST') }}"
          TEMPEST_OPENRC: "{{ lookup('env', 'TEMPEST_OPENRC') }}"
          TEMPEST_CONF_OVERRIDES: "{{ lookup('env', 'TEMPEST_CONF_OVERRIDES') }}"
          TEMPEST_NO_PROXY_EXTRA: "{{ lookup('env', 'TEMPEST_NO_PROXY_EXTRA') }}"
          RALLY_CONF_ENABLE_CREATE_TEMPEST_RESOURCES: "{{ lookup('env', 'RALLY_CONF_ENABLE_CREATE_TEMPEST_RESOURCES') }}"
        no_log: "{{ rally_no_sensitive_log }}"
        register: docker_result
        become: true

      - name: fixup permissions
        # We want the files owned by the user on the host and not the user from
        # the docker container
        file:
          path: "{{ results_path_remote.path }}"
          owner: "{{ ansible_user }}"
          recurse: true
        become: true

      - name: Write docker logs to file
        copy:
          content: "{{ docker_result.stdout }}"
          dest: "{{ results_path_remote.path }}/docker.log"
          mode: '0644'

      - name: synchronize files
        synchronize:
          src: "{{ results_path_remote.path }}/"
          dest: "{{ results_path_local }}"
          mode: pull
          archive: no
          recursive: true
          # For jump host
          use_ssh_args: true

      always:
        - name: cleanup results
          file:
            path: "{{ results_path_remote.path }}"
            state: absent
          when: results_path_remote.path is defined
